Given an array of strings strs, group the anagrams together. You can return the answer in any order.

An Anagram is a word or phrase formed by rearranging the letters of a different word or phrase, typically using all the original letters exactly once.
 

Example 1:

Input: strs = ["eat","tea","tan","ate","nat","bat"]
Output: [["bat"],["nat","tan"],["ate","eat","tea"]]
Example 2:

Input: strs = [""]
Output: [[""]]
Example 3:

Input: strs = ["a"]
Output: [["a"]]


/////////////////////////////////

fun groupAnagrams(list:Array<String>):List<List<String>>{
    var resultMap=mutableMapOf<String,MutableList<String>>()
    for(str in list){
        var key=str.toCharArray().sorted().joinToString("")
        resultMap.computeIfAbsent(key){mutableListOf()}.add(str)
    }
    
    return resultMap.values.toList()
}



fun main() {
    val strs = arrayOf("eat", "tea", "tan", "ate", "nat", "bat")
    val result = groupAnagrams(strs)
    println(result)
}

