You are given an integer array nums and an integer k.

In one operation, you can pick two numbers from the array whose sum equals k and remove them from the array.

Return the maximum number of operations you can perform on the array.

class Solution {
   
   public int maxOperations(int[] nums, int k) {
        Map<Integer, Integer> countMap = new HashMap<>();
        int operations = 0;

        for (int num : nums) {
            int complement = k - num;
            if (countMap.getOrDefault(complement, 0) > 0) {
                // Complement exists and we can form a pair
                operations++;
                // Decrement the count of the complement
                countMap.put(complement, countMap.get(complement) - 1);
            } else {
                // Complement does not exist, increase the count of the current number
                countMap.put(num, countMap.getOrDefault(num, 0) + 1);
            }
        }

        return operations;
    }
}
